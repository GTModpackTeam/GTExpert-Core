buildscript {
    repositories {
		maven {
			url = 'https://files.minecraftforge.net/maven'
		}
        maven { 
			url = 'https://maven.cleanroommc.com' 
		}
		maven { 
			url = 'https://repo.spongepowered.org/maven' 
		}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
		if (project.use_mixins.toBoolean()) {
			classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
		}
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

if (project.use_mixins.toBoolean()) {
	apply plugin: 'org.spongepowered.mixin'
}

version = project.mod_version
group = project.maven_group
archivesBaseName = project.archives_base_name

sourceCompatibility = targetCompatibility = '1.8'

compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

minecraft {
    version = '1.12.2-14.23.5.2847'
    runDir = 'run'
    mappings = 'stable_39'
	def args = []
	if (project.use_coremod.toBoolean()) {
		args << '-Dfml.coreMods.load=' + coremod_plugin_class_name
	}
	if (project.use_mixins.toBoolean()) {
		args << '-Dmixin.hotSwap=true'
		args << '-Dmixin.checks.interfaces=true'
		args << '-Dmixin.debug.export=true'
	}
	clientJvmArgs.addAll(args)
	serverJvmArgs.addAll(args)
}

repositories {
	maven { 
		url = 'https://maven.cleanroommc.com'
	}
    maven {
        url = 'https://repo.spongepowered.org/maven'
    }

	maven {
		name = "ModMaven"
		url = "https://modmaven.dev"
	}
	maven {
		url 'https://cursemaven.com'
	}
	maven {
		name = "CraftTweaker"
		url = 'https://maven.blamejared.com/'
	}
	mavenCentral()
}

dependencies {
	
	if (project.use_assetmover.toBoolean()) {
		deobfCompile 'com.cleanroommc:assetmover:2.1'
	}
	if (project.use_mixins.toBoolean()) {
		deobfCompile 'zone.rong:mixinbooter:7.0'
    }
	
	implementation 'org.jetbrains:annotations:23.0.0'

	compile 'CraftTweaker2:CraftTweaker2-MC1120-Main:1.12-4.1.20.682'
	compile 'curse.maven:had-enough-items-557549:4109510'
    //deobfCompile 'curse.maven:gregtech-ce-unofficial-557242:4068926'
	deobfCompile 'curse.maven:codechicken-lib-1-8-242818:2779848'
	deobfCompile 'curse.maven:the-one-probe-245211:2667280'
	//deobfCompile 'curse.maven:gregicality-multiblocks-564858:3783615'

	compile "curse.maven:enderio-64578:3328811"
	compile "curse.maven:endercore-231868:2972849"
	compile "info.loenwind.autoconfig:AutoConfig:${project.minecraft.version}-1.0.2"
	compile "info.loenwind.autosave:AutoSave:${project.minecraft.version}-1.0.11"

	provided (files("libs/EnderCore-1.12.2-0.5.76-core.jar"))
	provided (files("libs/gregtech-1.12.2-2.4.4-beta.jar"))
}

sourceSets {

    main {
        ext.refMap = 'mixins.' + archives_base_name + '.refmap.json'
    }

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
	rename '(.+_at.cfg)', 'META-INF/$1' // Access Transformers
}

jar {
    manifest {
		def attribute_map = [:]
		if (project.use_coremod.toBoolean()) {
			attribute_map['FMLCorePlugin'] = project.coremod_plugin_class_name
		}
		if (project.use_mixins.toBoolean()) {
			attribute_map['TweakClass'] = 'org.spongepowered.asm.launch.MixinTweaker'
		}
        attributes(attribute_map)
    }
}
